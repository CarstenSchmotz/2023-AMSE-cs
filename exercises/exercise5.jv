pipeline GTFSPipeline {

	GTFSExtractor
		-> ZipArchiveInterpreter
		-> DataFilePicker

        -> GTFSTextFileInterpreter
        -> GTFSCSVInterpreter
		//-> ColumnDataSelector
        -> GTFSTableInterpreter
        -> GTFSLoader;

	block GTFSExtractor oftype HttpExtractor {
		url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
	}

    block ZipArchiveInterpreter oftype ArchiveInterpreter { archiveType: "zip";}
    block DataFilePicker oftype FilePicker { path: "/stops.txt";}
    
    
	

	block GTFSTextFileInterpreter oftype TextFileInterpreter {
		encoding: "ASCII";

	}



	block GTFSCSVInterpreter oftype CSVInterpreter {
		enclosing: '"'; 
		enclosingEscape: '"';
	}
	//block ColumnDataSelector oftype CellRangeSelector {select: range A1:K*;}
	
	
	valuetype Coordinates oftype decimal{
		constraints: [Angleconstraint];
	}
	constraint Angleconstraint oftype RangeConstraint{
		lowerBound: -90;
		upperBound: 90;
	}



	block GTFSTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"stop_id" oftype integer,
			"stop_name" oftype text,
			"stop_lat" oftype Coordinates,
			"stop_lon" oftype Coordinates,
			"zone_id" oftype integer,
			
		];
	}

	

	block GTFSLoader oftype SQLiteLoader {
		table: "stops";
		file: "gfts.sqlite";
	}
}